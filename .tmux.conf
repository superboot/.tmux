# ↓↓↓ PREFIX
set -g prefix C-a
# set -g prefix M-n
# Free the original Ctrl-b prefix keybinding
# START:unbind
unbind C-b
# END:unbind
#setting the delay between prefix and command
# START:delay
set -s escape-time 1
# END:delay
# Ensure that we can send Ctrl-A to other apps
# START:bind_prefix
bind C-a send-prefix # This was commented out so we can toggle windows with prefix-ctrl-a.
bind a send-prefix
# END:bind_prefix
# ↑↑↑ END PREFIX
# ↓↓↓ START BASE WINDOW INDEX AT 1
# Set the base index for windows to 1 instead of 0
# START:index
set -g base-index 1
# END:index
# Set the base index for panes to 1 instead of 0
# START:panes_index
setw -g pane-base-index 1
# END:panes_index
# ↑↑↑ END START INDEX AT 1
# ↓↓↓ RE-SOURCE RC FILE HOTKEY
# Reload the file with Prefix r
# START:reload
bind r source-file ~/.tmux.conf \; display "Successfully re-read rc file."
bind-key -T root M-S-F9 source-file ~/.tmux.conf \; display "Successfully re-read rc file."
# END:reload
# ↑↑↑ END RE-SOURCE RC FILE HOTKEY
# ↓↓↓ PANE SPLITTING
# splitting panes
# START:panesplit
bind | split-window -h
bind - split-window -v
bind-key -T root M-I split-window -h
bind-key -T root M-O split-window -v
# END:panesplit
# ↑↑↑ END PANE SPLITTING
# ↓↓↓ PANE RESIZE
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
bind -r m resize-pane -Z 5

bind-key -T root M-C-H resize-pane -L 5
bind-key -T root M-C-J resize-pane -D 5
bind-key -T root M-C-K resize-pane -U 5
bind-key -T root M-C-L resize-pane -R 5
bind-key -T root M-C-m resize-pane -Z 5
# ↑↑↑ END PANE RESIZE
# ↓↓↓ PANE LAYOUT
bind-key -r Space next-layout
bind-key -T root M-Space next-layout
bind-key -T root M-X kill-pane
bind-key -T root M-M resize-pane -Z
# ↑↑↑ END PANE LAYOUT
# ↓↓↓ NAVIGATION
# moving between panes
bind h select-pane -L
bind l select-pane -R
bind k select-pane -U
bind j select-pane -D
bind-key -T root M-H select-pane -L
bind-key -T root M-L select-pane -R
bind-key -T root M-K select-pane -U
bind-key -T root M-J select-pane -D

# Quick window selection
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Moving between sessions
bind-key -T root M-C-S-, switch-client -p # Switch to previous session
bind-key -T root M-C-S-. switch-client -n # Switch to next session

#Toggle this and last window
#bind C-a  last-window
# ↑↑↑ END NAVIGATION
# ↓↓↓ WINDOWS
bind-key -T root M-> next-window
bind-key -T root M-< previous-window
bind-key -T root M-C new-window
set -g renumber-windows on
# Toggle send text to all panes in window.
#bind-key -T root M-A setw synchronize-panes \; show-window-options synchronize-panes
bind-key -T root M-B setw synchronize-panes \; show-window-options synchronize-panes
# Direct window select
bind-key -T root M-! select-window -t 1
bind-key -T root M-@ select-window -t 2
bind-key -T root M-S-3 select-window -t 3
# Rename
bind-key -T root M-R command-prompt "rename-window '%%'"

# Shift window back in window list
bind-key -T root M-S-Left swap-window -t "{previous}" \; previous-window
# Shift window forward in window list
bind-key -T root M-S-Right swap-window -t "{next}" \; next-window
# Close window
bind-key -T root M-D kill-pane 

# ↑↑↑ END WINDOWS
# ↓↓↓ SESSION MANAGEMENT
bind F1 choose-tree
#bind-key -T root M-? choose-tree
bind-key -T prefix n switch-client -n
bind-key -T prefix p switch-client -p
bind-key -T root M-N switch-client -n
bind-key -T root M-P switch-client -p
bind-key -T root M-C-C new-session
bind-key -T root M-S choose-tree -s
# New session
bind-key C new-session
# Rename session
bind-key -T root M-C-R command-prompt "rename-session '%%'"
# ↑↑↑ END SESSION MANAGEMENT
# ↓↓↓ COPY MODE
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
# bind-key -T root PageUp copy-mode -eu
bind-key -T root M-k copy-mode -eu
bind-key -T copy-mode-vi M-k send-keys -X halfpage-up
bind-key -T copy-mode-vi M-j send-keys -X halfpage-down
bind-key -T copy-mode-vi J send-keys -X scroll-down
bind-key -T copy-mode-vi K send-keys -X scroll-up
# Send tmux buffer to X clipboard too.
bind -T copy-mode-vi Y send-keys -X copy-pipe "xclip -sel clip -i"

# ↑↑↑ END COPY MODE
# ↓↓↓ COPY PASTE BINDINGS
bind-key -T root 'M-{' copy-mode
bind-key -T root 'M-v' paste-buffer
bind-key -T root 'M-}' paste-buffer
# ↑↑↑ END COPY PASTE BINDINGS
# ↓↓↓ MOUSE --DISSABLED
set -g mouse off
# ↑↑↑ END MOUSE --DISSABLED
# ↓↓↓ 256 COLORS
# set -g default-terminal "screen-256color"
set -g default-terminal "screen-256color"
# ↑↑↑ END 256 COLORS
# ↓↓↓ MONITOR ACTIVITY -- DISABLED
# enable activity alerts
setw -g monitor-activity off 
set -g visual-activity off
# ↑↑↑ END MONITOR ACTIVITY
# ↓↓↓ COLORS
# set the status line's colors
set -g status-style 'fg=white bg=colour233'

# set the color of the window list
set -g window-status-style 'fg=white bg=default dim'

# set colors for the active window
set -g window-status-current-style 'fg=white bg=blue bright'

# set colors for the active window
set -g window-active-style 'fg=white bg=#060606'
set -g window-style 'fg=white bg=black'

# pane colors
#set -g pane-active-border-style 'fg=white bg=yellow'
set -g pane-active-border-style 'fg=black bg=black dim'
set -g pane-border-style 'fg=black bg=black dim'

# Command / message line
set -g message-style 'fg=white bg=black bright'
# ↑↑↑ END COLORS
# ↓↓↓ VI KEYS
setw -g mode-keys vi
# ↑↑↑ END VI KEYS
# ↓↓↓ STATUS BAR CONFIG
#Toggle status bar
bind F2 set status
#UTF8
#set -g status-utf8 on

# Left Side:
set -g status-left-length 25
set -g status-left "#[fg=white]@#H:#S  "

# Right Side:
set -g status-right-length 75
#set -g status-right "#($HOME/bin/weather) #[fg=white]Location: #[fg=green]S=#S #[fg=yellow]W=#I#[fg=white]:#[fg=cyan]P=#P #[fg=cyan]%b %d, %l:%M %p"
set -g status-right "#[fg=cyan]%b %d, %l:%M %p"

# Update the status bar every sixty seconds
set -g status-interval 10

# Center the window list
set -g status-justify left

#Set how long messages are displayed.
set -g display-time 4000

#Turn off auto renaming.
set -g automatic-rename off
# ↑↑↑ END STATUS BAR CONFIG
# ↓↓↓ CLOCK
set -g clock-mode-style 12
set -g clock-mode-colour red
# ↑↑↑ END CLOCK
# ↓↓↓ LOCK
set -g lock-after-time 0
set -g lock-command vlock
# ↑↑↑ END LOCK
# ↓↓↓ SPRUNGE
#bind-key w /home/john/bin/grab-code-from-sprunge-line-in-text-block
# ↑↑↑ END SPRUNGE
# ↓↓↓ EDIT TMUX CONFIG
bind-key -T root M-E new-window -n "VIM tmux.conf" vim ~/.tmux/.tmux.conf
# ↑↑↑ END EDIT TMUX CONFIG
# ↓↓↓ F-key shortcuts
bind-key -T root M-F1 select-window -t MAIN:ELINKS
# ↑↑↑ END F-key shortcuts
# ↓↓↓ WEBSEARCH
bind-key -T root M-? command-prompt -p 'Web search:' "new-window -n 'Search' webSearchScript duck '%%%'"
# ↑↑↑ END WEBSEARCH
# ↓↓↓ PLUGINS (Keep as last section)
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'Morantron/tmux-fingers'
#tmux bind-key $FINGERS_KEY run-shell "/home/john/.tmux/plugins/tmux-fingers/scripts/tmux-fingers.sh '$input_method'"
bind-key -T root M-F run-shell "/home/john/.tmux/plugins/tmux-fingers/scripts/tmux-fingers.sh 'fingers-mode'"

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
# ↑↑↑ END PLUGINS

bind C-a send-prefix  # I put this at the end to over ride any c-a maps above.

